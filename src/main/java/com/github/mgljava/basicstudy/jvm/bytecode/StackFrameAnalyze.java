package com.github.mgljava.basicstudy.jvm.bytecode;

/**
 * 栈帧（stack frame）
 *
 * 栈帧是一种用于帮助虚拟机执行方法调用与方法执行的数据结构
 *
 * 栈帧本身是一种数据结构，封装了方法的局部变量表，动态链接信息，方法返回地址以及操作数栈等信息
 *
 * 符号引用：对变量或者对象的引用（包含包名和类名）存储在常量池中
 *   1. 类加载的时候或者在第一次使用的时候转为直接引用，这种转换成为静态解析
 *   2. 另外一些符号引用则是在每次运行期转换为直接引用，这种就叫做动态链接，这体现了Java的多态性。
 * 直接引用：理解为指针，可以直接通过直接引用在内存中找到对应的类以及方法等
 *
 * slot: 存储局部变量的最小单位，理解为坑，一个int类型变量的数据放到一个slot中，如果是double类型，那就采用2个slot来存储
 * slot也是会复用的，因为一个方法内，局部变量的生命周期也是不一样的，后面的变量可以复用前面被垃圾回收器回收掉的slot
 */
public class StackFrameAnalyze {

}
